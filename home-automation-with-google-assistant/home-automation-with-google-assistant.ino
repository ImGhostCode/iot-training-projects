/* 
  Sketch generated by the Arduino IoT Cloud Thing "Home automation"
  https://create.arduino.cc/cloud/things/71167c8d-9854-4e21-aef8-3ed1fe25c04e 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight bathroom_light;
  CloudLight bedroom_light;
  CloudLight lamp;
  CloudSwitch fan;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include "secrets.h"
#include "thingProperties.h"

// Pin Definitions
const int relayPins[]     = {32, 33, 25, 26};    // Relay GPIOs
const int switchPins[]    = {27, 14, 12, 13}; // Switch GPIOs

// Relay State Memory
int relayStates[]         = {0, 0, 0, 0};
bool switchStates[]       = {LOW, LOW, LOW, LOW};

/***********************************
 *       RELAY CONTROL
 ***********************************/
void updateRelay(int index, bool state) {
  digitalWrite(relayPins[index], state ? LOW : HIGH);  // LOW to turn ON
  relayStates[index] = state;
  Serial.printf("Relay %d %s\n", index + 1, state ? "ON" : "OFF");
}

/***********************************
 *       MANUAL SWITCH HANDLER
 ***********************************/
void manualControl() {
  for (int i = 0; i < 4; i++) {
    bool currentState = digitalRead(switchPins[i]) == LOW;
    if (currentState && !switchStates[i]) {
      updateRelay(i, true);
      switchStates[i] = true;
      setCloudLight(i, true);
      Serial.printf("Switch-%d ON\n", i + 1);
    } else if (!currentState && switchStates[i]) {
      updateRelay(i, false);
      switchStates[i] = false;
      setCloudLight(i, false);
      Serial.printf("Switch-%d OFF\n", i + 1);
    }
  }
}

/***********************************
 *       SET CLOUD LIGHT VALUES
 ***********************************/
void setCloudLight(int index, bool state) {
  switch (index) {
    case 0: bedroom_light = state; break;
    case 1: lamp = state; break;
    case 2: fan = state; break;
    case 3: bathroom_light = state; break;
  }
}

/***********************************
 *       CONNECTION EVENTS
 ***********************************/
void doThisOnConnect() {
  Serial.println("Connected to Arduino IoT Cloud");
}
void doThisOnSync() {
  Serial.println("Properties synchronized");
}
void doThisOnDisconnect() {
  Serial.println("Disconnected from Arduino IoT Cloud");
}

/***********************************
 *       SETUP FUNCTION
 ***********************************/
void setup() {
  Serial.begin(9600);
  delay(1500);

  initProperties();

  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  ArduinoCloud.addCallback(ArduinoIoTCloudEvent::CONNECT, doThisOnConnect);
  ArduinoCloud.addCallback(ArduinoIoTCloudEvent::SYNC, doThisOnSync);
  ArduinoCloud.addCallback(ArduinoIoTCloudEvent::DISCONNECT, doThisOnDisconnect);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  for (int i = 0; i < 4; i++) {
    pinMode(relayPins[i], OUTPUT);
    pinMode(switchPins[i], INPUT_PULLUP);
    digitalWrite(relayPins[i], HIGH); // OFF by default
  }
}

/***********************************
 *       LOOP FUNCTION
 ***********************************/
void loop() {
  ArduinoCloud.update();
  manualControl();
}

/***********************************
 *       CLOUD -> RELAY CALLBACKS
 ***********************************/
/*
  Since BedroomLight is READ_WRITE variable, onBedroomLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBedroomLightChange()  {
  // Add your code here to act upon BedroomLight change
  updateRelay(0, bedroom_light);
}

/*
  Since Lamp is READ_WRITE variable, onLampChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLampChange()  {
  // Add your code here to act upon Lamp change
  updateRelay(1, lamp);
}

/*
  Since Fan is READ_WRITE variable, onFanChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFanChange()  {
  // Add your code here to act upon Fan change
  updateRelay(3, fan);
}

/*
  Since BathroomLight is READ_WRITE variable, onBathroomLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBathroomLightChange()  {
  // Add your code here to act upon BathroomLight change
  updateRelay(2, bathroom_light);
}